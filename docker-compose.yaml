services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aiagents
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  agent_service:
    build:
      context: .
      dockerfile: src/api/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/aiagents

  streamlit_app:
    build:
      context: .
      dockerfile: src/ui/Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      - agent_service
    environment:
      - AGENT_URL=http://agent_service:8080

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8081'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.27.0
    ports:
      - 8081:8081
      - 50051:50051
    volumes:
      - ./weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    env_file:
      - .env
    environment:
      HUGGINGFACE_APIKEY: $HF_API_KEY
      OPENAI_APIKEY: $OPENAI_API_KEY
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-huggingface'
      ENABLE_MODULES: 'text2vec-huggingface,text2vec-openai'
      CLUSTER_HOSTNAME: 'node1'

volumes:
  postgres_data:
  weaviate_data:
